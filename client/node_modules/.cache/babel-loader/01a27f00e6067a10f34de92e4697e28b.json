{"ast":null,"code":"var _jsxFileName = \"/Users/rahulgoud/rahul/intern1/TMC-Tool/client/src/components/AssignTask/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport \"../AssignTask/AssignTask.css\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport * as XLSX from \"xlsx\";\nimport Main from \"../Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignTask = () => {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [projectId, setProjectId] = useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [assignee, setAssignee] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSubmit = () => {\n    const newTask = {\n      projectId,\n      projectName,\n      taskDescription,\n      assignee,\n      startDate,\n      endDate,\n      status\n    };\n    setTasks([...tasks, newTask]);\n    setProjectId(\"\");\n    setProjectName(\"\");\n    setTaskDescription(\"\");\n    setAssignee(\"\");\n    setStartDate(\"\");\n    setEndDate(\"\");\n    setStatus(\"\");\n    handleCloseModal();\n  };\n\n  const downloadPDF = () => {\n    const doc = new jsPDF(); // Set font size for the date and time\n\n    doc.setFontSize(12); // Add the current date and time\n\n    const currentDateTime = new Date().toLocaleString();\n    const dateText = `Date and Time: ${currentDateTime}`;\n    const headingText = \"TMC Tool\"; // Calculate the width of the text to center it on the page\n\n    const dateTextWidth = doc.getTextWidth(dateText);\n    const headingTextWidth = doc.getTextWidth(headingText);\n    const pageWidth = doc.internal.pageSize.getWidth(); // Calculate X-coordinate to center-align text\n\n    const dateTextX = (pageWidth - dateTextWidth) / 2;\n    const headingTextX = (pageWidth - headingTextWidth) / 2; // Add the date and time\n\n    doc.text(dateText, dateTextX, 10); // Set font size for the heading\n\n    doc.setFontSize(16); // Add the heading \"TMC Tool\"\n\n    doc.text(headingText, headingTextX, 20); // Set font size back to 12 for the table\n\n    doc.setFontSize(12); // Add the table\n\n    autoTable(doc, {\n      html: \".task-table\"\n    }); // Save the PDF\n\n    doc.save(\"table.pdf\");\n  };\n\n  const downloadExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(tasks);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Task List\");\n    XLSX.writeFile(workbook, \"task-list.xlsx\");\n  };\n\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: \"array\"\n      });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const excelData = XLSX.utils.sheet_to_json(worksheet); // Update the tasks state with the uploaded data\n\n      setTasks(excelData);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const filteredTasks = tasks.filter(task => {\n    const searchValue = search.toLowerCase();\n    return task.projectId.toLowerCase().includes(searchValue) || task.projectName.toLowerCase().includes(searchValue);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assign-task-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"assign-task-text\",\n          children: \"ASSIGN TASK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-button1\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"error\",\n            onClick: downloadPDF,\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"Download PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            onClick: downloadExcel,\n            style: {\n              marginRight: \"10px\"\n            },\n            children: \"downloadExcel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".xlsx, .xls\",\n            style: {\n              display: \"none\"\n            },\n            onChange: handleFileUpload,\n            id: \"fileInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              component: \"span\",\n              style: {\n                marginRight: \"10px\"\n              },\n              children: \"Upload Excel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAddTask,\n            className: \"add-task-button12\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: isModalOpen,\n        onClose: handleCloseModal,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: \"absolute\",\n            top: \"45%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: 350,\n            height: 580,\n            bgcolor: \"background.paper\",\n            boxShadow: 24,\n            p: 5,\n            borderRadius: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"modal-modal-title\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Project ID\",\n            variant: \"outlined\",\n            value: projectId,\n            onChange: e => setProjectId(e.target.value),\n            sx: {\n              marginBottom: 1\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Project Name\",\n            variant: \"outlined\",\n            value: projectName,\n            onChange: e => setProjectName(e.target.value),\n            sx: {\n              marginBottom: 1\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Task Description\",\n            variant: \"outlined\",\n            multiline: true,\n            rows: 3,\n            value: taskDescription,\n            onChange: e => setTaskDescription(e.target.value),\n            sx: {\n              marginBottom: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Assignee\",\n            variant: \"outlined\",\n            value: assignee,\n            onChange: e => setAssignee(e.target.value),\n            sx: {\n              marginBottom: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"date\",\n            label: \"Start Date\",\n            variant: \"outlined\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value),\n            InputLabelProps: {\n              shrink: true\n            },\n            sx: {\n              marginBottom: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"date\",\n            label: \"End Date\",\n            variant: \"outlined\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            InputLabelProps: {\n              shrink: true\n            },\n            sx: {\n              marginBottom: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            sx: {\n              marginBottom: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"status\",\n              value: status,\n              onChange: e => setStatus(e.target.value),\n              label: \"Status\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Ongoing\",\n                children: \"Ongoing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleCloseModal,\n            sx: {\n              marginRight: 2\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Search by Project ID or Name\",\n            variant: \"outlined\",\n            value: search,\n            onChange: e => setSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"task-table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Project ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Project Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Task Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Assignee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Start Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"End Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: task.projectId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: task.projectName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: task.taskDescription\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: task.assignee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: task.startDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: task.endDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: task.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)), \"\\xA0\\xA0\\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignTask, \"t/H6Bu0dJNhbzVORfosp4oWKuhQ=\");\n\n_c = AssignTask;\nexport default AssignTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignTask\");","map":{"version":3,"sources":["/Users/rahulgoud/rahul/intern1/TMC-Tool/client/src/components/AssignTask/index.jsx"],"names":["React","useState","Button","Modal","Box","TextField","Select","MenuItem","FormControl","InputLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","jsPDF","autoTable","XLSX","Main","AssignTask","isModalOpen","setIsModalOpen","projectId","setProjectId","projectName","setProjectName","taskDescription","setTaskDescription","assignee","setAssignee","startDate","setStartDate","endDate","setEndDate","status","setStatus","tasks","setTasks","handleAddTask","handleCloseModal","handleSubmit","newTask","downloadPDF","doc","setFontSize","currentDateTime","Date","toLocaleString","dateText","headingText","dateTextWidth","getTextWidth","headingTextWidth","pageWidth","internal","pageSize","getWidth","dateTextX","headingTextX","text","html","save","downloadExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","handleFileUpload","e","file","target","files","reader","FileReader","onload","data","Uint8Array","result","read","type","Sheets","SheetNames","excelData","sheet_to_json","readAsArrayBuffer","search","setSearch","filteredTasks","filter","task","searchValue","toLowerCase","includes","marginRight","display","position","top","left","transform","width","height","bgcolor","boxShadow","p","borderRadius","value","marginBottom","shrink","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,8BAAP;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0B,eAAD,EAAkBC,kBAAlB,IAAwC3B,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoC,KAAD,EAAQC,QAAR,IAAoBrC,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMsC,aAAa,GAAG,MAAM;AAC1BjB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAMkB,gBAAgB,GAAG,MAAM;AAC7BlB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMmB,YAAY,GAAG,MAAM;AACzB,UAAMC,OAAO,GAAG;AACdnB,MAAAA,SADc;AAEdE,MAAAA,WAFc;AAGdE,MAAAA,eAHc;AAIdE,MAAAA,QAJc;AAKdE,MAAAA,SALc;AAMdE,MAAAA,OANc;AAOdE,MAAAA;AAPc,KAAhB;AAUAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWK,OAAX,CAAD,CAAR;AAEAlB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAI,IAAAA,gBAAgB;AACjB,GArBD;;AAsBA,QAAMG,WAAW,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAG,IAAI5B,KAAJ,EAAZ,CADwB,CAGxB;;AACA4B,IAAAA,GAAG,CAACC,WAAJ,CAAgB,EAAhB,EAJwB,CAMxB;;AACA,UAAMC,eAAe,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAxB;AACA,UAAMC,QAAQ,GAAI,kBAAiBH,eAAgB,EAAnD;AACA,UAAMI,WAAW,GAAG,UAApB,CATwB,CAWxB;;AACA,UAAMC,aAAa,GAAGP,GAAG,CAACQ,YAAJ,CAAiBH,QAAjB,CAAtB;AACA,UAAMI,gBAAgB,GAAGT,GAAG,CAACQ,YAAJ,CAAiBF,WAAjB,CAAzB;AACA,UAAMI,SAAS,GAAGV,GAAG,CAACW,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,EAAlB,CAdwB,CAgBxB;;AACA,UAAMC,SAAS,GAAG,CAACJ,SAAS,GAAGH,aAAb,IAA8B,CAAhD;AACA,UAAMQ,YAAY,GAAG,CAACL,SAAS,GAAGD,gBAAb,IAAiC,CAAtD,CAlBwB,CAoBxB;;AACAT,IAAAA,GAAG,CAACgB,IAAJ,CAASX,QAAT,EAAmBS,SAAnB,EAA8B,EAA9B,EArBwB,CAuBxB;;AACAd,IAAAA,GAAG,CAACC,WAAJ,CAAgB,EAAhB,EAxBwB,CA0BxB;;AACAD,IAAAA,GAAG,CAACgB,IAAJ,CAASV,WAAT,EAAsBS,YAAtB,EAAoC,EAApC,EA3BwB,CA6BxB;;AACAf,IAAAA,GAAG,CAACC,WAAJ,CAAgB,EAAhB,EA9BwB,CAgCxB;;AACA5B,IAAAA,SAAS,CAAC2B,GAAD,EAAM;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAAN,CAAT,CAjCwB,CAmCxB;;AACAjB,IAAAA,GAAG,CAACkB,IAAJ,CAAS,WAAT;AACD,GArCD;;AAuCA,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,SAAS,GAAG9C,IAAI,CAAC+C,KAAL,CAAWC,aAAX,CAAyB7B,KAAzB,CAAlB;AACA,UAAM8B,QAAQ,GAAGjD,IAAI,CAAC+C,KAAL,CAAWG,QAAX,EAAjB;AACAlD,IAAAA,IAAI,CAAC+C,KAAL,CAAWI,iBAAX,CAA6BF,QAA7B,EAAuCH,SAAvC,EAAkD,WAAlD;AACA9C,IAAAA,IAAI,CAACoD,SAAL,CAAeH,QAAf,EAAyB,gBAAzB;AACD,GALD;;AAMA,QAAMI,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,QAAI,CAACF,IAAL,EAAW;AAEX,UAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAiBN,CAAD,IAAO;AACrB,YAAMO,IAAI,GAAG,IAAIC,UAAJ,CAAeR,CAAC,CAACE,MAAF,CAASO,MAAxB,CAAb;AACA,YAAMd,QAAQ,GAAGjD,IAAI,CAACgE,IAAL,CAAUH,IAAV,EAAgB;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAhB,CAAjB;AACA,YAAMnB,SAAS,GAAGG,QAAQ,CAACiB,MAAT,CAAgBjB,QAAQ,CAACkB,UAAT,CAAoB,CAApB,CAAhB,CAAlB;AACA,YAAMC,SAAS,GAAGpE,IAAI,CAAC+C,KAAL,CAAWsB,aAAX,CAAyBvB,SAAzB,CAAlB,CAJqB,CAMrB;;AACA1B,MAAAA,QAAQ,CAACgD,SAAD,CAAR;AACD,KARD;;AAUAV,IAAAA,MAAM,CAACY,iBAAP,CAAyBf,IAAzB;AACD,GAjBD;;AAmBA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBzF,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM0F,aAAa,GAAGtD,KAAK,CAACuD,MAAN,CAAcC,IAAD,IAAU;AAC3C,UAAMC,WAAW,GAAGL,MAAM,CAACM,WAAP,EAApB;AACA,WACEF,IAAI,CAACtE,SAAL,CAAewE,WAAf,GAA6BC,QAA7B,CAAsCF,WAAtC,KACAD,IAAI,CAACpE,WAAL,CAAiBsE,WAAjB,GAA+BC,QAA/B,CAAwCF,WAAxC,CAFF;AAID,GANqB,CAAtB;AAOA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,oBAAiC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,OAFR;AAGE,YAAA,OAAO,EAAEnD,WAHX;AAIE,YAAA,KAAK,EAAE;AAAEsD,cAAAA,WAAW,EAAE;AAAf,aAJT;AAAA,sBAKC;AALD;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAElC,aAHX;AAIE,YAAA,KAAK,EAAE;AAAEkC,cAAAA,WAAW,EAAE;AAAf,aAJT;AAAA,sBAKC;AALD;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,MAAM,EAAC,aAFT;AAGE,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAHT;AAIE,YAAA,QAAQ,EAAE3B,gBAJZ;AAKE,YAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAwBE;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,KAAK,EAAC,WAFR;AAGE,cAAA,SAAS,EAAC,MAHZ;AAIE,cAAA,KAAK,EAAE;AAAE0B,gBAAAA,WAAW,EAAE;AAAf,eAJT;AAAA,wBAKC;AALD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAmCE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAE1D,aAHX;AAIE,YAAA,SAAS,EAAC,mBAJZ;AAAA,sBAKC;AALD;AAAA;AAAA;AAAA;AAAA,kBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgDE,QAAC,KAAD;AACE,QAAA,IAAI,EAAElB,WADR;AAEE,QAAA,OAAO,EAAEmB,gBAFX;AAGE,2BAAgB,mBAHlB;AAIE,4BAAiB,yBAJnB;AAAA,+BAME,QAAC,GAAD;AACE,UAAA,EAAE,EAAE;AACF2D,YAAAA,QAAQ,EAAE,UADR;AAEFC,YAAAA,GAAG,EAAE,KAFH;AAGFC,YAAAA,IAAI,EAAE,KAHJ;AAIFC,YAAAA,SAAS,EAAE,uBAJT;AAKFC,YAAAA,KAAK,EAAE,GALL;AAMFC,YAAAA,MAAM,EAAE,GANN;AAOFC,YAAAA,OAAO,EAAE,kBAPP;AAQFC,YAAAA,SAAS,EAAE,EART;AASFC,YAAAA,CAAC,EAAE,CATD;AAUFC,YAAAA,YAAY,EAAE;AAVZ,WADN;AAAA,kCAcE;AAAI,YAAA,EAAE,EAAC,mBAAP;AAAA,sBAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,KAAK,EAAC,YAFR;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,KAAK,EAAErF,SAJT;AAKE,YAAA,QAAQ,EAAGiD,CAAD,IAAOhD,YAAY,CAACgD,CAAC,CAACE,MAAF,CAASmC,KAAV,CAL/B;AAME,YAAA,EAAE,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB,aANN;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBAfF,eAwBE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,KAAK,EAAC,cAFR;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,KAAK,EAAErF,WAJT;AAKE,YAAA,QAAQ,EAAG+C,CAAD,IAAO9C,cAAc,CAAC8C,CAAC,CAACE,MAAF,CAASmC,KAAV,CALjC;AAME,YAAA,EAAE,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB,aANN;AAOE,YAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAiCE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,KAAK,EAAC,kBAFR;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,SAAS,MAJX;AAKE,YAAA,IAAI,EAAE,CALR;AAME,YAAA,KAAK,EAAEnF,eANT;AAOE,YAAA,QAAQ,EAAG6C,CAAD,IAAO5C,kBAAkB,CAAC4C,CAAC,CAACE,MAAF,CAASmC,KAAV,CAPrC;AAQE,YAAA,EAAE,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB;AARN;AAAA;AAAA;AAAA;AAAA,kBAjCF,eA2CE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,OAAO,EAAC,UAHV;AAIE,YAAA,KAAK,EAAEjF,QAJT;AAKE,YAAA,QAAQ,EAAG2C,CAAD,IAAO1C,WAAW,CAAC0C,CAAC,CAACE,MAAF,CAASmC,KAAV,CAL9B;AAME,YAAA,EAAE,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB;AANN;AAAA;AAAA;AAAA;AAAA,kBA3CF,eAmDE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,YAHR;AAIE,YAAA,OAAO,EAAC,UAJV;AAKE,YAAA,KAAK,EAAE/E,SALT;AAME,YAAA,QAAQ,EAAGyC,CAAD,IAAOxC,YAAY,CAACwC,CAAC,CAACE,MAAF,CAASmC,KAAV,CAN/B;AAOE,YAAA,eAAe,EAAE;AACfE,cAAAA,MAAM,EAAE;AADO,aAPnB;AAUE,YAAA,EAAE,EAAE;AAAED,cAAAA,YAAY,EAAE;AAAhB;AAVN;AAAA;AAAA;AAAA;AAAA,kBAnDF,eA+DE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,UAHR;AAIE,YAAA,OAAO,EAAC,UAJV;AAKE,YAAA,KAAK,EAAE7E,OALT;AAME,YAAA,QAAQ,EAAGuC,CAAD,IAAOtC,UAAU,CAACsC,CAAC,CAACE,MAAF,CAASmC,KAAV,CAN7B;AAOE,YAAA,eAAe,EAAE;AACfE,cAAAA,MAAM,EAAE;AADO,aAPnB;AAUE,YAAA,EAAE,EAAE;AAAED,cAAAA,YAAY,EAAE;AAAhB;AAVN;AAAA;AAAA;AAAA;AAAA,kBA/DF,eA2EE,QAAC,WAAD;AAAa,YAAA,SAAS,MAAtB;AAAuB,YAAA,OAAO,EAAC,UAA/B;AAA0C,YAAA,EAAE,EAAE;AAAEA,cAAAA,YAAY,EAAE;AAAhB,aAA9C;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,QAApB;AAAA,wBAA6B;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,EAAE,EAAC,QADL;AAEE,cAAA,KAAK,EAAE3E,MAFT;AAGE,cAAA,QAAQ,EAAGqC,CAAD,IAAOpC,SAAS,CAACoC,CAAC,CAACE,MAAF,CAASmC,KAAV,CAH5B;AAIE,cAAA,KAAK,EAAC,QAJR;AAAA,sCAME,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,WAAhB;AAAA,0BAA4B;AAA5B;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,SAAhB;AAAA,0BAA0B;AAA1B;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,SAAhB;AAAA,0BAA0B;AAA1B;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3EF,eAwFE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,OAAO,EAAErE,gBAFX;AAGE,YAAA,EAAE,EAAE;AAAEyD,cAAAA,WAAW,EAAE;AAAf,aAHN;AAAA,sBAIC;AAJD;AAAA;AAAA;AAAA;AAAA,kBAxFF,eA+FE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAA4C,YAAA,OAAO,EAAExD,YAArD;AAAA,sBAAmE;AAAnE;AAAA;AAAA;AAAA;AAAA,kBA/FF,EAiGW,kCAjGX;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAhDF,eA2JE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,8BADR;AAEE,YAAA,OAAO,EAAC,UAFV;AAGE,YAAA,KAAK,EAAEgD,MAHT;AAIE,YAAA,QAAQ,EAAGjB,CAAD,IAAOkB,SAAS,CAAClB,CAAC,CAACE,MAAF,CAASmC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,kBADF,EAMI,kCANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,cAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,YAAjB;AAAA,oCACE,QAAC,SAAD;AAAA,qCACE,QAAC,QAAD;AAAA,wCACE,QAAC,SAAD;AAAA,4BAAW;AAAX;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,SAAD;AAAA,4BAAW;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,SAAD;AAAA,4BAAW;AAAX;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,QAAC,SAAD;AAAA,4BAAW;AAAX;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE,QAAC,SAAD;AAAA,4BAAW;AAAX;AAAA;AAAA;AAAA;AAAA,wBALF,eAME,QAAC,SAAD;AAAA,4BAAW;AAAX;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE,QAAC,SAAD;AAAA,4BAAW;AAAX;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,SAAD;AAAA,yBACGlB,aAAa,CAACqB,GAAd,CAAkB,CAACnB,IAAD,EAAOoB,KAAP,kBACjB,QAAC,QAAD;AAAA,wCACE,QAAC,SAAD;AAAA,4BAAYpB,IAAI,CAACtE;AAAjB;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,SAAD;AAAA,4BAAYsE,IAAI,CAACpE;AAAjB;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,SAAD;AAAA,4BAAYoE,IAAI,CAAClE;AAAjB;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,QAAC,SAAD;AAAA,4BAAYkE,IAAI,CAAChE;AAAjB;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE,QAAC,SAAD;AAAA,4BAAYgE,IAAI,CAAC9D;AAAjB;AAAA;AAAA;AAAA;AAAA,wBALF,eAME,QAAC,SAAD;AAAA,4BAAY8D,IAAI,CAAC5D;AAAjB;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE,QAAC,SAAD;AAAA,4BAAY4D,IAAI,CAAC1D;AAAjB;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA,iBAAe8E,KAAf;AAAA;AAAA;AAAA;AAAA,sBADD,CADH,EAWK,kBAXL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3JF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAyMD,CA1TD;;GAAM7F,U;;KAAAA,U;AA4TN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\n\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport \"../AssignTask/AssignTask.css\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\n\nimport * as XLSX from \"xlsx\";\nimport Main from \"../Main\";\nconst AssignTask = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [projectId, setProjectId] = useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [assignee, setAssignee] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSubmit = () => {\n    const newTask = {\n      projectId,\n      projectName,\n      taskDescription,\n      assignee,\n      startDate,\n      endDate,\n      status,\n    };\n\n    setTasks([...tasks, newTask]);\n\n    setProjectId(\"\");\n    setProjectName(\"\");\n    setTaskDescription(\"\");\n    setAssignee(\"\");\n    setStartDate(\"\");\n    setEndDate(\"\");\n    setStatus(\"\");\n    handleCloseModal();\n  };\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n\n    // Set font size for the date and time\n    doc.setFontSize(12);\n\n    // Add the current date and time\n    const currentDateTime = new Date().toLocaleString();\n    const dateText = `Date and Time: ${currentDateTime}`;\n    const headingText = \"TMC Tool\";\n\n    // Calculate the width of the text to center it on the page\n    const dateTextWidth = doc.getTextWidth(dateText);\n    const headingTextWidth = doc.getTextWidth(headingText);\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Calculate X-coordinate to center-align text\n    const dateTextX = (pageWidth - dateTextWidth) / 2;\n    const headingTextX = (pageWidth - headingTextWidth) / 2;\n\n    // Add the date and time\n    doc.text(dateText, dateTextX, 10);\n\n    // Set font size for the heading\n    doc.setFontSize(16);\n\n    // Add the heading \"TMC Tool\"\n    doc.text(headingText, headingTextX, 20);\n\n    // Set font size back to 12 for the table\n    doc.setFontSize(12);\n\n    // Add the table\n    autoTable(doc, { html: \".task-table\" });\n\n    // Save the PDF\n    doc.save(\"table.pdf\");\n  };\n\n  const downloadExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(tasks);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Task List\");\n    XLSX.writeFile(workbook, \"task-list.xlsx\");\n  };\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: \"array\" });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const excelData = XLSX.utils.sheet_to_json(worksheet);\n\n      // Update the tasks state with the uploaded data\n      setTasks(excelData);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const filteredTasks = tasks.filter((task) => {\n    const searchValue = search.toLowerCase();\n    return (\n      task.projectId.toLowerCase().includes(searchValue) ||\n      task.projectName.toLowerCase().includes(searchValue)\n    );\n  });\n  return (\n    <>\n      <Main />\n      <div className=\"form-container\">\n        <div className=\"assign-task-container\">\n          <h1 className=\"assign-task-text\">ASSIGN TASK</h1>\n          <div className=\"row-button1\">\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              onClick={downloadPDF}\n              style={{ marginRight: \"10px\" }}\n            >\n              Download PDF\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              onClick={downloadExcel}\n              style={{ marginRight: \"10px\" }}\n            >\n              downloadExcel\n            </Button>\n            <input\n              type=\"file\"\n              accept=\".xlsx, .xls\"\n              style={{ display: \"none\" }}\n              onChange={handleFileUpload}\n              id=\"fileInput\"\n            />\n            <label htmlFor=\"fileInput\">\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                component=\"span\"\n                style={{ marginRight: \"10px\" }}\n              >\n                Upload Excel\n              </Button>\n            </label>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleAddTask}\n              className=\"add-task-button12\"\n            >\n              Add Task\n            </Button>\n          </div>\n        </div>\n        <Modal\n          open={isModalOpen}\n          onClose={handleCloseModal}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box\n            sx={{\n              position: \"absolute\",\n              top: \"45%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: 350,\n              height: 580,\n              bgcolor: \"background.paper\",\n              boxShadow: 24,\n              p: 5,\n              borderRadius: 5,\n            }}\n          >\n            <h2 id=\"modal-modal-title\">Add Task</h2>\n            <TextField\n              fullWidth\n              label=\"Project ID\"\n              variant=\"outlined\"\n              value={projectId}\n              onChange={(e) => setProjectId(e.target.value)}\n              sx={{ marginBottom: 1 }}\n              required\n            />\n            <TextField\n              fullWidth\n              label=\"Project Name\"\n              variant=\"outlined\"\n              value={projectName}\n              onChange={(e) => setProjectName(e.target.value)}\n              sx={{ marginBottom: 1 }}\n              required\n            />\n            <TextField\n              fullWidth\n              label=\"Task Description\"\n              variant=\"outlined\"\n              multiline\n              rows={3}\n              value={taskDescription}\n              onChange={(e) => setTaskDescription(e.target.value)}\n              sx={{ marginBottom: 1 }}\n            />\n            <TextField\n              fullWidth\n              label=\"Assignee\"\n              variant=\"outlined\"\n              value={assignee}\n              onChange={(e) => setAssignee(e.target.value)}\n              sx={{ marginBottom: 1 }}\n            />\n            <TextField\n              fullWidth\n              type=\"date\"\n              label=\"Start Date\"\n              variant=\"outlined\"\n              value={startDate}\n              onChange={(e) => setStartDate(e.target.value)}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              sx={{ marginBottom: 1 }}\n            />\n            <TextField\n              fullWidth\n              type=\"date\"\n              label=\"End Date\"\n              variant=\"outlined\"\n              value={endDate}\n              onChange={(e) => setEndDate(e.target.value)}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              sx={{ marginBottom: 1 }}\n            />\n            <FormControl fullWidth variant=\"outlined\" sx={{ marginBottom: 2 }}>\n              <InputLabel htmlFor=\"status\">Status</InputLabel>\n              <Select\n                id=\"status\"\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n                label=\"Status\"\n              >\n                <MenuItem value=\"Completed\">Completed</MenuItem>\n                <MenuItem value=\"Pending\">Pending</MenuItem>\n                <MenuItem value=\"Ongoing\">Ongoing</MenuItem>\n              </Select>\n            </FormControl>\n            <Button\n              variant=\"outlined\"\n              onClick={handleCloseModal}\n              sx={{ marginRight: 2 }}\n            >\n              Cancel\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n                    \n          </Box>\n        </Modal>\n        <div className=\"task-details-container\">\n          <div className=\"search-inputs\">\n            <TextField\n              label=\"Search by Project ID or Name\"\n              variant=\"outlined\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n            />\n                    \n          </div>\n          <TableContainer>\n            <Table className=\"task-table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Project ID</TableCell>\n                  <TableCell>Project Name</TableCell>\n                  <TableCell>Task Description</TableCell>\n                  <TableCell>Assignee</TableCell>\n                  <TableCell>Start Date</TableCell>\n                  <TableCell>End Date</TableCell>\n                  <TableCell>Status</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredTasks.map((task, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{task.projectId}</TableCell>\n                    <TableCell>{task.projectName}</TableCell>\n                    <TableCell>{task.taskDescription}</TableCell>\n                    <TableCell>{task.assignee}</TableCell>\n                    <TableCell>{task.startDate}</TableCell>\n                    <TableCell>{task.endDate}</TableCell>\n                    <TableCell>{task.status}</TableCell>\n                  </TableRow>\n                ))}\n                    \n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AssignTask;\n"]},"metadata":{},"sourceType":"module"}