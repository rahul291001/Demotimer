{"ast":null,"code":"var _jsxFileName = \"/Users/rahulgoud/rahul/intern1/TMC-Tool/client/src/components/Login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from '../UserContext/UserContext';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate, Link } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    userData,\n    setUserData\n  } = useUser();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  useEffect(() => {//console.log('Updated userData:', userData);\n  }, [userData]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await sendLoginRequest(formData);\n\n      if (response.status === 200) {\n        const decodedToken = jwt_decode(response.data.token);\n        const userId = decodedToken.userId;\n        const {\n          firstname,\n          lastname\n        } = decodedToken;\n        console.log('decoded token:', decodedToken); // setUserData({\n        //   userId,\n        // });\n        // console.log(userData);\n\n        console.log(`User ${userId} ${firstname} ${lastname} logged in successfully`);\n\n        if (userId) {\n          setUserData({\n            user: {\n              userId\n            }\n          });\n          console.log('User ID stored in state:', userId);\n        } else {\n          console.log('User ID is not defined in the user data');\n        }\n\n        console.log(userData);\n        localStorage.setItem('token', response.data.token); //setIsLoggedIn(true);\n\n        const userEmail = formData.email;\n        navigate(`/home?userEmail=${userEmail}`);\n      } else {\n        alert('Could not find the credentials', response.data.message);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n\n  const sendLoginRequest = async data => {\n    try {\n      const response = await axios.post('http://localhost:8000/auth/login', data);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.login_container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.login_form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.form_container,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: styles.logintext,\n            children: \"Welcome back to the magic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            name: \"email\",\n            onChange: handleChange,\n            value: formData.email,\n            required: true,\n            className: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: handleChange,\n            value: formData.password,\n            required: true,\n            className: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.green_btn,\n            children: \"Sing In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: styles.new,\n          children: \"New Here ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: styles.white_btn,\n            children: \"Sing Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"gnHaQDhcuyMG3H5Tc8rYb6wfelw=\", false, function () {\n  return [useNavigate, useUser];\n});\n\n_c = Login;\n;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/rahulgoud/rahul/intern1/TMC-Tool/client/src/components/Login/index.jsx"],"names":["React","useState","useEffect","useUser","jwt_decode","useNavigate","Link","styles","axios","Login","navigate","userData","setUserData","formData","setFormData","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","response","sendLoginRequest","status","decodedToken","data","token","userId","firstname","lastname","console","log","user","localStorage","setItem","userEmail","alert","message","error","post","login_container","login_form_container","left","form_container","logintext","input","green_btn","right","new","white_btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useUser} from '../UserContext/UserContext'\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate ,Link } from 'react-router-dom';\nimport styles from './styles.module.css'\nimport axios from 'axios';\n\n\nfunction Login() {\n    const navigate = useNavigate();\n    const {userData, setUserData} = useUser();\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    });\n    useEffect(() => {\n        //console.log('Updated userData:', userData);\n      }, [userData]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n          const response = await sendLoginRequest(formData);\n          if (response.status === 200) {\n            const decodedToken = jwt_decode(response.data.token);\n            const userId = decodedToken.userId;\n            const { firstname, lastname } = decodedToken;\n            console.log('decoded token:', decodedToken);\n      \n            \n            // setUserData({\n            //   userId,\n            // });\n            // console.log(userData);\n      \n            console.log(`User ${userId} ${firstname} ${lastname} logged in successfully`);\n      \n            if (userId) {\n                setUserData({ user: { userId } });\n              console.log('User ID stored in state:', userId);\n            } else {\n              console.log('User ID is not defined in the user data');\n            }\n            console.log(userData);\n      \n            localStorage.setItem('token', response.data.token);\n            //setIsLoggedIn(true);\n            const userEmail = formData.email;\n            navigate(`/home?userEmail=${userEmail}`);\n          } else {\n            alert('Could not find the credentials', response.data.message);\n          }\n        } catch (error) {\n          console.log('Error:', error);\n        }\n      };\n      \n      \n  \n\n    const sendLoginRequest = async (data) => {\n        try {\n            const response = await axios.post('http://localhost:8000/auth/login', data);\n            return response;\n        } catch (error) {\n            throw error;\n            \n        }\n    };\n\n  return (\n    <div className={styles.login_container}>\n      <div className={styles.login_form_container}>\n        <div className={styles.left}>\n          <form className={styles.form_container} onSubmit={handleSubmit}>\n            <h3 className={styles.logintext}>Welcome back to the magic</h3>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formData.email}\n              required\n              className={styles.input}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              value={formData.password}\n              required\n              className={styles.input}\n            />\n            \n            <button type=\"submit\" className={styles.green_btn}>\n              Sing In\n            </button>\n          </form>\n        </div>\n        <div className={styles.right}>\n          <h6 className={styles.new}>New Here ?</h6>\n          <Link to=\"/signup\">\n            <button type=\"button\" className={styles.white_btn}>\n              Sing Up\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}