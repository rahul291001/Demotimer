{"ast":null,"code":"var _jsxFileName = \"/Users/rahulgoud/rahul/intern/client/src/components/CursorTracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CursorTracker = () => {\n  _s();\n\n  const [cursorActiveTime, setCursorActiveTime] = useState(0);\n  const [showMessage, setShowMessage] = useState(false);\n  useEffect(() => {\n    let activityTimer;\n\n    const handleMouseMove = () => {\n      setCursorActiveTime(0); // Reset active time on cursor movement\n\n      clearTimeout(activityTimer); // Reset the timer on cursor movement\n\n      setShowMessage(true);\n      activityTimer = setTimeout(() => {\n        setShowMessage(false);\n      }, 70000); // Hide message after 70 seconds of inactivity\n    };\n\n    window.addEventListener('mousemove', handleMouseMove); // Send cursor activity data to the server every minute\n\n    const sendCursorActivityToServer = () => {\n      axios.post('/api/cursor-activity', {\n        time: cursorActiveTime\n      });\n    };\n\n    const activityInterval = setInterval(sendCursorActivityToServer, 60000);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      clearInterval(activityInterval);\n    };\n  }, [cursorActiveTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time with cursor active: \", cursorActiveTime, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), showMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cursor is active.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CursorTracker, \"m40tI8bP51K3WigmVst81d26pmU=\");\n\n_c = CursorTracker;\nexport default CursorTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CursorTracker\");","map":{"version":3,"sources":["/Users/rahulgoud/rahul/intern/client/src/components/CursorTracker.js"],"names":["React","useState","useEffect","axios","CursorTracker","cursorActiveTime","setCursorActiveTime","showMessage","setShowMessage","activityTimer","handleMouseMove","clearTimeout","setTimeout","window","addEventListener","sendCursorActivityToServer","post","time","activityInterval","setInterval","removeEventListener","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,aAAJ;;AAEA,UAAMC,eAAe,GAAG,MAAM;AAC5BJ,MAAAA,mBAAmB,CAAC,CAAD,CAAnB,CAD4B,CACJ;;AACxBK,MAAAA,YAAY,CAACF,aAAD,CAAZ,CAF4B,CAEC;;AAC7BD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,MAAAA,aAAa,GAAGG,UAAU,CAAC,MAAM;AAC/BJ,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAFyB,EAEvB,KAFuB,CAA1B,CAJ4B,CAMjB;AACZ,KAPD;;AASAK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCJ,eAArC,EAZc,CAcd;;AACA,UAAMK,0BAA0B,GAAG,MAAM;AACvCZ,MAAAA,KAAK,CAACa,IAAN,CAAW,sBAAX,EAAmC;AAAEC,QAAAA,IAAI,EAAEZ;AAAR,OAAnC;AACD,KAFD;;AAIA,UAAMa,gBAAgB,GAAGC,WAAW,CAACJ,0BAAD,EAA6B,KAA7B,CAApC;AAEA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACO,mBAAP,CAA2B,WAA3B,EAAwCV,eAAxC;AACAW,MAAAA,aAAa,CAACH,gBAAD,CAAb;AACD,KAHD;AAID,GAzBQ,EAyBN,CAACb,gBAAD,CAzBM,CAAT;AA2BA,sBACE;AAAA,4BACE;AAAA,iBAAG,2BAAH,EAA6BA,gBAA7B,EAA8C,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,WAAW,iBAAI;AAAA,gBAAG;AAAH;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArCD;;GAAMH,a;;KAAAA,a;AAuCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CursorTracker = () => {\n  const [cursorActiveTime, setCursorActiveTime] = useState(0);\n  const [showMessage, setShowMessage] = useState(false);\n\n  useEffect(() => {\n    let activityTimer;\n\n    const handleMouseMove = () => {\n      setCursorActiveTime(0); // Reset active time on cursor movement\n      clearTimeout(activityTimer); // Reset the timer on cursor movement\n      setShowMessage(true);\n      activityTimer = setTimeout(() => {\n        setShowMessage(false);\n      }, 70000); // Hide message after 70 seconds of inactivity\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Send cursor activity data to the server every minute\n    const sendCursorActivityToServer = () => {\n      axios.post('/api/cursor-activity', { time: cursorActiveTime });\n    };\n\n    const activityInterval = setInterval(sendCursorActivityToServer, 60000);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      clearInterval(activityInterval);\n    };\n  }, [cursorActiveTime]);\n\n  return (\n    <div>\n      <p>Time with cursor active: {cursorActiveTime} seconds</p>\n      {showMessage && <p>Cursor is active.</p>}\n    </div>\n  );\n};\n\nexport default CursorTracker;\n"]},"metadata":{},"sourceType":"module"}