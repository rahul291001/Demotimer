{"ast":null,"code":"var _jsxFileName = \"/Users/rahulgoud/rahul/intern1/TMC-Tool/client/src/components/Setting_/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Main from \"../Main\";\nimport \"../Setting_/Settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SettingsPage = () => {\n  _s();\n\n  // Example settings state\n  const [notificationsEnabled, setNotificationsEnabled] = useState(true);\n  const [theme, setTheme] = useState(\"light\");\n  const [language, setLanguage] = useState(\"en\");\n  const [fontSize, setFontSize] = useState(\"medium\");\n  const [autoSave, setAutoSave] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const handleNotificationsChange = () => {\n    setNotificationsEnabled(prev => !prev);\n  };\n\n  const handleThemeChange = selectedTheme => {\n    setTheme(selectedTheme);\n  };\n\n  const handleLanguageChange = selectedLanguage => {\n    setLanguage(selectedLanguage);\n  };\n\n  const handleFontSizeChange = selectedFontSize => {\n    setFontSize(selectedFontSize);\n  };\n\n  const handleAutoSaveChange = () => {\n    setAutoSave(prev => !prev);\n  };\n\n  const handleDarkModeChange = () => {\n    setDarkMode(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Enable Notifications\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: notificationsEnabled,\n              onChange: handleNotificationsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Theme\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: theme,\n              onChange: e => handleThemeChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"light\",\n                children: \"Light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"dark\",\n                children: \"Dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Language\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: language,\n              onChange: e => handleLanguageChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"en\",\n                children: \"English\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"fr\",\n                children: \"French\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"es\",\n                children: \"Spanish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Font Size\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: fontSize,\n              onChange: e => handleFontSizeChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"small\",\n                children: \"Small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"large\",\n                children: \"Large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Auto-Save\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: autoSave,\n              onChange: handleAutoSaveChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Dark Mode\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: darkMode,\n              onChange: handleDarkModeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SettingsPage, \"OG2M2326bZlxuzdYMnj/tTBs0gI=\");\n\n_c = SettingsPage;\nexport default SettingsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"sources":["/Users/rahulgoud/rahul/intern1/TMC-Tool/client/src/components/Setting_/index.jsx"],"names":["React","useState","Main","SettingsPage","notificationsEnabled","setNotificationsEnabled","theme","setTheme","language","setLanguage","fontSize","setFontSize","autoSave","setAutoSave","darkMode","setDarkMode","handleNotificationsChange","prev","handleThemeChange","selectedTheme","handleLanguageChange","selectedLanguage","handleFontSizeChange","selectedFontSize","handleAutoSaveChange","handleDarkModeChange","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,0BAAP;;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDJ,QAAQ,CAAC,IAAD,CAAhE;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,QAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMe,yBAAyB,GAAG,MAAM;AACtCX,IAAAA,uBAAuB,CAAEY,IAAD,IAAU,CAACA,IAAZ,CAAvB;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,aAAD,IAAmB;AAC3CZ,IAAAA,QAAQ,CAACY,aAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIC,gBAAD,IAAsB;AACjDZ,IAAAA,WAAW,CAACY,gBAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIC,gBAAD,IAAsB;AACjDZ,IAAAA,WAAW,CAACY,gBAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCX,IAAAA,WAAW,CAAEI,IAAD,IAAU,CAACA,IAAZ,CAAX;AACD,GAFD;;AAIA,QAAMQ,oBAAoB,GAAG,MAAM;AACjCV,IAAAA,WAAW,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAS,QAAA,SAAS,EAAC,kBAAnB;AAAA,gCACE;AAAA,oBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE;AAAA,uBAAO,sBAAP,eAEE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEb,oBAFX;AAGE,cAAA,QAAQ,EAAEY;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE;AAAA,iCACE;AAAA,uBAAO,cAAP,eAEE;AACE,cAAA,KAAK,EAAEV,KADT;AAEE,cAAA,QAAQ,EAAGoB,CAAD,IAAOR,iBAAiB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAFpC;AAAA,sCAIE;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA,0BAAsB;AAAtB;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA,0BAAqB;AAArB;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAwBE;AAAA,iCACE;AAAA,uBAAO,iBAAP,eAEE;AACE,cAAA,KAAK,EAAEpB,QADT;AAEE,cAAA,QAAQ,EAAGkB,CAAD,IAAON,oBAAoB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAFvC;AAAA,sCAIE;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA,0BAAmB;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA,0BAAmB;AAAnB;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA,0BAAmB;AAAnB;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAwCE;AAAS,QAAA,SAAS,EAAC,kBAAnB;AAAA,gCACE;AAAA,oBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE;AAAA,uBAAO,kBAAP,eAEE;AACE,cAAA,KAAK,EAAElB,QADT;AAEE,cAAA,QAAQ,EAAGgB,CAAD,IAAOJ,oBAAoB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAFvC;AAAA,sCAIE;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA,0BAAsB;AAAtB;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAQ,gBAAA,KAAK,EAAC,QAAd;AAAA,0BAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA,0BAAsB;AAAtB;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAeE;AAAA,iCACE;AAAA,uBAAO,WAAP,eAEE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEhB,QAFX;AAGE,cAAA,QAAQ,EAAEY;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF,eAyBE;AAAA,iCACE;AAAA,uBAAO,WAAP,eAEE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEV,QAFX;AAGE,cAAA,QAAQ,EAAEW;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkFD,CAnHD;;GAAMtB,Y;;KAAAA,Y;AAqHN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Main from \"../Main\";\nimport \"../Setting_/Settings.css\";\nconst SettingsPage = () => {\n  // Example settings state\n  const [notificationsEnabled, setNotificationsEnabled] = useState(true);\n  const [theme, setTheme] = useState(\"light\");\n  const [language, setLanguage] = useState(\"en\");\n  const [fontSize, setFontSize] = useState(\"medium\");\n  const [autoSave, setAutoSave] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const handleNotificationsChange = () => {\n    setNotificationsEnabled((prev) => !prev);\n  };\n\n  const handleThemeChange = (selectedTheme) => {\n    setTheme(selectedTheme);\n  };\n\n  const handleLanguageChange = (selectedLanguage) => {\n    setLanguage(selectedLanguage);\n  };\n\n  const handleFontSizeChange = (selectedFontSize) => {\n    setFontSize(selectedFontSize);\n  };\n\n  const handleAutoSaveChange = () => {\n    setAutoSave((prev) => !prev);\n  };\n\n  const handleDarkModeChange = () => {\n    setDarkMode((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Main />\n      <div className=\"settings-page\">\n        <h1>Settings</h1>\n        <section className=\"settings-section\">\n          <h2>General</h2>\n          <div>\n            <label>\n              Enable Notifications\n              <input\n                type=\"checkbox\"\n                checked={notificationsEnabled}\n                onChange={handleNotificationsChange}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Select Theme\n              <select\n                value={theme}\n                onChange={(e) => handleThemeChange(e.target.value)}\n              >\n                <option value=\"light\">Light</option>\n                <option value=\"dark\">Dark</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Select Language\n              <select\n                value={language}\n                onChange={(e) => handleLanguageChange(e.target.value)}\n              >\n                <option value=\"en\">English</option>\n                <option value=\"fr\">French</option>\n                <option value=\"es\">Spanish</option>\n              </select>\n            </label>\n          </div>\n        </section>\n        <section className=\"settings-section\">\n          <h2>Display</h2>\n          <div>\n            <label>\n              Select Font Size\n              <select\n                value={fontSize}\n                onChange={(e) => handleFontSizeChange(e.target.value)}\n              >\n                <option value=\"small\">Small</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"large\">Large</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label>\n              Auto-Save\n              <input\n                type=\"checkbox\"\n                checked={autoSave}\n                onChange={handleAutoSaveChange}\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Dark Mode\n              <input\n                type=\"checkbox\"\n                checked={darkMode}\n                onChange={handleDarkModeChange}\n              />\n            </label>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default SettingsPage;\n"]},"metadata":{},"sourceType":"module"}